import type { Metadata } from "next";
import { Inter, Open_Sans } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/Navbar";
import TostifyAlert from "@/components/TostifyAlert/TostifyAlert";
import { headers } from "next/headers";

const openSans = Open_Sans({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: {
    default: "KwHouse",
    template: "KwHouse | %s",
  },
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // const headersList = headers();
  // const header_url = headersList.get("x-url") || "";
  // const pathname = headersList.get("x-pathname");
  // const origin_url = headersList.get("x-origin");
  // const headersList = headers();
  // console.log("header_url", header_url);
  // console.log("headersList", headersList.get("x-pathname"));
  // console.log("origin_url", origin_url);
  return (
    <html lang="en" className={openSans.className}>
      <body className="w-full bg-neutral-50 overflow-auto">
        {/* AuthContext 는 클라이언트 컴포넌트임.. 우산만 
        씌워주기에 부모지만 자식은 서버컴포넌트도 올수있음 readme에 자세히 써놓음 */}
        <header className="sticky top-0 bg-white z-10 border-b">
          <div className="px-[40px] mx-auto">
            <Navbar />
          </div>
        </header>
        <main className="w-full flex justify-center px-[40px] mx-auto">
          {/* SWR통신을 위해 authcontect처럼 우산을 시워줄것임! */}
          <TostifyAlert>{children} </TostifyAlert>
        </main>
        {/* 이곳을 통해 modal을 연다 */}

        <div id="portal" />
      </body>
    </html>
  );
}
